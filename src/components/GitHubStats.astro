---
// Standard fetch method (no 'astro:fetch' module)
async function getGitHubStats(username: string) {
  try {
    const response = await fetch(`https://api.github.com/users/${username}/repos?per_page=100`);
    const repos: { languages_url: string }[] = await response.json(); // Type repos explicitly

    let totalLines = 0;

    for (const repo of repos) {
      const languageResponse = await fetch(repo.languages_url);
      const languages: Record<string, number> = await languageResponse.json(); // Type languages as a dictionary of numbers
      const repoLines = Object.values(languages).reduce((a, b) => a + b, 0); // Explicitly type `a` and `b` in `reduce`
      totalLines += repoLines;
    }

    return {
      totalRepos: repos.length,
      totalLines,
    };
  } catch (error) {
    console.error('Error fetching data:', error);
    return null;
  }
}

const username = 'paulpietzko';
const stats = await getGitHubStats(username);
---

<div>
  {stats ? (
    <>
      <p>Total Repositories: {stats.totalRepos}</p>
      <p>Total Lines of Code: {stats.totalLines}</p>
    </>
  ) : (
    <p>Error loading data or no data available.</p>
  )}
</div>
